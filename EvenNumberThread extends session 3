class EvenNumberThread extends Thread {
    private long sleepTime;

    public EvenNumberThread(long sleepTime) {
        this.sleepTime = sleepTime;
    }

    @Override
    public void run() {
        long startTime = System.currentTimeMillis();
        try {
            Thread.sleep(sleepTime); // Simulate thread sleeping
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        long endTime = System.currentTimeMillis();
        long elapsedTime = endTime - startTime;
        System.out.println("Thread " + Thread.currentThread().getName() + " slept for " + elapsedTime + " milliseconds.");
    }

    public void generateEvenNumbers() {
        for (int i = 0; i <= 10; i += 2) {
            System.out.println("Thread " + Thread.currentThread().getName() + " generated: " + i);
        }
    }
}

public class ThreadJoinExample {
    public static void main(String[] args) {
        EvenNumberThread thread1 = new EvenNumberThread(10000); // Sleep for 10 seconds
        EvenNumberThread thread2 = new EvenNumberThread(5000); // Sleep for 5 seconds

        thread1.start();
        thread2.start();

        try {
            thread1.join();
            thread2.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        System.out.println("Both threads have finished execution.");
    }
}
